-- 버전들 
node -v v16.20.2
npm -v  8.19.4
vite 버전: 4.5.14
vue3 
oracle 19c 
jdk8
Spring Boot '2.6.2'
lombok 설치 완료 

-- port 
 8082
 5173   : vlite는 기본이 5173 

- 프로젝트 위치 
C:\Users\chan\Documents\workspace-spring-tools-for-eclipse-4.31.0.RELEASE\minfo


-- 12c부터는 계정 생성할때 C##붙여야함  (dbeaver에서도 마찬가지)
SQL> create user C##chan identified by 1234; 
SQL> grant connect, resource, dba to C##chan;   


-- vite로 프로젝트 생성  ( vue cli 기반으로 안함) 
1. cd "C:\Users\chan\Documents\workspace-spring-tools-for-eclipse-4.31.0.RELEASE\minfo"
2. npm create vue@latest frontend
  cd frontend
  npm install
  npm run dev 
  
  
  vite + vue3 안에서는 process.env 사용 불가능하고 import.meta.env로 사용해야함 
  그리고 .env 파일 생성한내용은 아래와 같음 
  # Vite에서는 반드시 VITE_ 접두사 사용
	VITE_SERVER_URL=http://localhost:8082
	VITE_BASE_URL=/


-- 현재 build.gradle과 같은 위치에 frontend  집어넣었고  node_modules는 용량이 커서 보통 git에 올리지않음 
   --> 옮기는 과정에서 사라지기도 하므로 안올리고 npm install을 다시 하는게 맞음
-- npm install 한 목록들 

npm install axios
npm install -D @types/axios
npm install vuex@next       
npm install --save @fortawesome/fontawesome-free
npm install js-cookie


-- front 실행 
npm run dev

-- *** 배포과정 *** 
1. 프론트 빌드 
  cd frontend
  npm run build
   -> vite.config.js에서 build.outDir: '../src/main/resources/static'으로 설정했기 때문에 
      빌드 결과물이 minfo/src/main/resources/static/ 안에 들어갑니다.
2. 백엔드 빌드 (프론트 포함된 상태)
  ./gradlew clean build
  build/libs/minfo-0.0.1-SNAPSHOT.jar 같은 실행 가능한 JAR이 생성됨
  이 안에는 Spring Boot 코드 + Vue 정적 파일(dist) 이 전부 들어 있습니다.
3. 서버에서 실행 
java -jar build/libs/minfo-0.0.1-SNAPSHOT.jar
기본적으로 http://localhost:8082 (혹은 설정한 포트)에서 서비스 시작
Vue 빌드 결과물이 / 경로에서 자동 제공됨
API는 /api/** 같은 경로로 Spring Boot가 처리
즉, Vue 앱과 Spring Boot API 서버가 한 몸이 된 JAR 하나로 배포됩니다.
 
-- 깃랩 공지사항 연동시 주의점 
java 8 버전을 사용해선지는 모르겠지만  RestTemplate로 GitLab API에 요청했는데, URL에 /가 포함된 파일 경로를 정확히 인코딩하는 과정에서 계속 꼬임 
-> HttpClient로 바꿔서 URL에 /가 들어간 경로를 정확히 %2F로 인코딩하고, private_token도 URL 파라미터로 붙여서 요청하면 GitLab이 바로 파일을 반환해줌

-- 깃랩 관련 
1. 깃랩 api - 깃랩에서 저장소에 있는 파일 내용 그대로 가져오는 api 
GET /projects/:id/repository/files/:file_path/raw?ref=:branch
:id → 프로젝트 숫자 ID (예: 74071629)
:file_path → 파일 경로, URL 인코딩 필요 (notices/2025-09-01_test1_2025-09-07.md → notices%2F2025-09-01_test1_2025-09-07.md)
ref → 브랜치 이름 (예: main)
-> cmd 에서 curl --header "PRIVATE-TOKEN: glpat-NiKXmqc9zb2s42o1cO4Ai286MQp1OmNxeXR2Cw.01.121pukiz8" "https://gitlab.com/api/v4/projects/74071629/repository/files/notices%2F2025-09-01_test1_2025-09-07.md/raw?ref=main"
이렇게 작성하면 프로젝트 숫자id및 파일경로 나옴 

-- 404 에러 
Vue Router history 모드 쓰면 Spring Boot에서 fallback 설정 필요
Spring Boot가 없는 경로에 대해서도 index.html을 반환하게 해야 새로고침 시 404 안 뜸